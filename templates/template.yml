prefixes:
  odrl: http://www.w3.org/ns/odrl/2/
  xsd: http://www.w3.org/2001/XMLSchema#
  rdfs: http://www.w3.org/2000/01/rdf-schema#
  rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  occe: https://w3id.org/occe/
  dc-terms: http://purl.org/dc/terms/
  this: https://example.com/
  idlab-fn: http://example.com/idlab/function/
  grel: http://users.ugent.be/~bjdmeest/function/grel.ttl#

sources:
  policy:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*]"

  permission:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*]"

  permission_assignee:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*]"

  permission_assignee_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*].refinements.[*]"
  
  permission_assignee_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*].logical_constraints.xone.[*]"
  
  permission_assignee_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*].logical_constraints.or.[*]"
  
  permission_assignee_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*].logical_constraints.and.[*]"
  
  permission_assignee_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].assignees.[*].logical_constraints.andSequence.[*]"

  permission_target:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*]"

  permission_target_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*].refinements.[*]"
  
  permission_target_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*].logical_constraints.xone.[*]"
  
  permission_target_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*].logical_constraints.or.[*]"
  
  permission_target_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*].logical_constraints.and.[*]"
  
  permission_target_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].targets.[*].logical_constraints.andSequence.[*]"

  permission_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*]"
  
  permission_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*].logical_constraints.xone.[*]"
  
  permission_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*].logical_constraints.or.[*]"
  
  permission_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*].logical_constraints.and.[*]"
  
  permission_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*].logical_constraints.andSequence.[*]"

  permission_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].actions.[*].refinements.[*]"

  permission_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].constraints.[*]"

  permission_constraint_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].logical_constraints.xone.[*]"
  
  permission_constraint_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].logical_constraints.or.[*]"
  
  permission_constraint_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].logical_constraints.and.[*]"
  
  permission_constraint_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].logical_constraints.andSequence.[*]"

  permission_duty:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*]"

  permission_duty_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*]"
  
  permission_duty_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*].logical_constraints.xone.[*]"
  
  permission_duty_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*].logical_constraints.or.[*]"
  
  permission_duty_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*].logical_constraints.and.[*]"
  
  permission_duty_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*].logical_constraints.andSequence.[*]"

  permission_duty_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].actions.[*].refinements.[*]"

  permission_duty_assignee:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].assignees.[*]"

  permission_duty_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].constraints.[*]"

  permission_duty_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].logical_constraints.xone.[*]"
  
  permission_duty_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].logical_constraints.or.[*]"
  
  permission_duty_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].logical_constraints.and.[*]"
  
  permission_duty_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].logical_constraints.andSequence.[*]"

  permission_duty_consequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*]"

  permission_duty_consequence_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*]"

  permission_duty_consequence_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*].logical_constraints.xone.[*]"
  
  permission_duty_consequence_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*].logical_constraints.or.[*]"
  
  permission_duty_consequence_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*].logical_constraints.and.[*]"
  
  permission_duty_consequence_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*].logical_constraints.andSequence.[*]"

  permission_duty_consequence_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.permissions.[*].duties.[*].consequences.[*].actions.[*].refinements.[*]"

  prohibition:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*]"

  prohibition_assignee:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*]"

  prohibition_assignee_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*].refinements.[*]"
  
  prohibition_assignee_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*].logical_constraints.xone.[*]"
  
  prohibition_assignee_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*].logical_constraints.or.[*]"
  
  prohibition_assignee_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*].logical_constraints.and.[*]"
  
  prohibition_assignee_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].assignees.[*].logical_constraints.andSequence.[*]"

  prohibition_target:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*]"

  prohibition_target_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*].logical_constraints.xone.[*]"
  
  prohibition_target_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*].logical_constraints.or.[*]"
  
  prohibition_target_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*].logical_constraints.and.[*]"
  
  prohibition_target_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*].logical_constraints.andSequence.[*]"

  prohibition_target_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].targets.[*].refinements.[*]"

  prohibition_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*]"

  prohibition_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*].logical_constraints.xone.[*]"
  
  prohibition_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*].logical_constraints.or.[*]"
  
  prohibition_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*].logical_constraints.and.[*]"
  
  prohibition_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*].logical_constraints.andSequence.[*]"

  prohibition_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].actions.[*].refinements.[*]"

  prohibition_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].constraints.[*]"

  prohibition_constraint_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].logical_constraints.xone.[*]"
  
  prohibition_constraint_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].logical_constraints.or.[*]"
  
  prohibition_constraint_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].logical_constraints.and.[*]"
  
  prohibition_constraint_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].logical_constraints.andSequence.[*]"

  prohibition_remedy:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].remedies.[*]"

  prohibition_remedy_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].remedies.[*].actions.[*]"

  prohibition_remedy_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.prohibitions.[*].remedies.[*].constraints.[*]"

  obligation:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*]"
  
  obligation_assignee:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*]"

  obligation_assignee_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*].refinements.[*]"
  
  obligation_assignee_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*].logical_constraints.xone.[*]"
  
  obligation_assignee_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*].logical_constraints.or.[*]"
  
  obligation_assignee_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*].logical_constraints.and.[*]"
  
  obligation_assignee_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].assignees.[*].logical_constraints.andSequence.[*]"

  obligation_target:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*]"

  obligation_target_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*].refinements.[*]"
  
  obligation_target_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*].logical_constraints.xone.[*]"
  
  obligation_target_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*].logical_constraints.or.[*]"
  
  obligation_target_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*].logical_constraints.and.[*]"
  
  obligation_target_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].targets.[*].logical_constraints.andSequence.[*]"

  obligation_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*]"
  
  obligation_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*].logical_constraints.xone.[*]"
  
  obligation_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*].logical_constraints.or.[*]"
  
  obligation_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*].logical_constraints.and.[*]"
  
  obligation_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*].logical_constraints.andSequence.[*]"

  obligation_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].actions.[*].refinements.[*]"

  obligation_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].constraints.[*]"

  obligation_constraint_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].logical_constraints.xone.[*]"
  
  obligation_constraint_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].logical_constraints.or.[*]"
  
  obligation_constraint_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].logical_constraints.and.[*]"
  
  obligation_constraint_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].logical_constraints.andSequence.[*]"

  obligation_consequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*]"

  obligation_consequence_action:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*]"
  
  obligation_consequence_action_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*].logical_constraints.xone.[*]"
  
  obligation_consequence_action_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*].logical_constraints.or.[*]"
  
  obligation_consequence_action_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*].logical_constraints.and.[*]"
  
  obligation_consequence_action_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*].logical_constraints.andSequence.[*]"

  obligation_consequence_action_refinement:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].actions.[*].refinements.[*]"

  obligation_consequence_assignee:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].assignees.[*]"

  obligation_consequence_constraint:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].constraints.[*]"

  obligation_consequence_xone:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].logical_constraints.xone.[*]"
  
  obligation_consequence_or:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].logical_constraints.or.[*]"
  
  obligation_consequence_and:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].logical_constraints.and.[*]"
  
  obligation_consequence_andSequence:
    access: /mnt/data/policy.json
    referenceFormulation: jsonpath
    iterator: "$.policies[*].rules.obligations.[*].consequences.[*].logical_constraints.andSequence.[*]"

mappings:
  policy:
    sources:
      - policy
    s: this:policies/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:profile, $(profile)~iri]
      - [dc-terms:creator, $(creator)]
      - [dc-terms:issued, $(issued), xsd:date]
      - [dc-terms:description, $(description)]
      - p: odrl:permission
        o:
          - mapping: permission
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From policy
                - [str2, $(policy_id)] # From permission
      - p: odrl:prohibition
        o:
          - mapping: prohibition
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From policy
                - [str2, $(policy_id)] # From rule
      - p: odrl:obligation
        o:
          - mapping: obligation
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From policy
                - [str2, $(policy_id)] # From rule

  permission:
    sources:
      - permission
    s: this:policies/$(policy_id)/permissions/$(id)
    po:
      - [dc-terms:subject, $(cce), xsd:string]
      - [odrl:assigner, $(assigner)~iri]
      - p: odrl:assignee
        o:
          - mapping: permission_assignee
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission
                - [str2, $(rule_id)] # From assignee
      - p: odrl:target # In case "target" is an object
        o:
          - mapping: permission_target
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission
                - [str2, $(rule_id)] # From target
      - p: odrl:action
        o:
          - mapping: permission_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission
                - [str2, $(rule_id)] # From action
      - p: odrl:duty
        o:
          - mapping: permission_duty
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission
                - [str2, $(rule_id)] # From duty
      - p: odrl:constraint
        o:
          - mapping: permission_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission
                  - [str2, $(rule_id)] # From permission's constraint
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/permissions/$(id)/constraints/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's constraint
                - [grel:valueParameter2, "xone"] # From permission's constraint
          - value: this:policies/$(policy_id)/permissions/$(id)/constraints/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's constraint
                - [grel:valueParameter2, "and"] # From permission's constraint
          - value: this:policies/$(policy_id)/permissions/$(id)/constraints/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's constraint
                - [grel:valueParameter2, "or"] # From permission's constraint
          - value: this:policies/$(policy_id)/permissions/$(id)/constraints/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's constraint
                - [grel:valueParameter2, "andSequence"] # From permission's constraint

  permission_assignee:
    sources:
      - permission_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "assignee" has no refinement
      - [odrl:source, $(source)~iri] # In case "assignee" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: permission_assignee_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission's assignee
                  - [str2, $(assignee_id)] # From permission assignee's refinement

  permission_assignee_xone_parent:
    sources:
      - permission_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's assignee
        - [grel:valueParameter2, "xone"] # From permission's assignee
    po:
      - p: odrl:xone
        o:
          - mapping: permission_assignee_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's assignee
                - [str2, $(id)] # From permission's assignee xone

  permission_assignee_or_parent:
    sources:
      - permission_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's assignee
        - [grel:valueParameter2, "or"] # From permission's assignee
    po:
      - p: odrl:or
        o:
          - mapping: permission_assignee_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's assignee
                - [str2, $(id)] # From permission's assignee or

  permission_assignee_and_parent:
    sources:
      - permission_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's assignee
        - [grel:valueParameter2, "and"] # From permission's assignee
    po:
      - p: odrl:and
        o:
          - mapping: permission_assignee_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's assignee
                - [str2, $(id)] # From permission's assignee and

  permission_assignee_andSequence_parent:
    sources:
      - permission_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's assignee
        - [grel:valueParameter2, "andSequence"] # From permission's assignee
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_assignee_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's assignee
                - [str2, $(id)] # From permission's assignee andSequence

  permission_assignee_xone:
    sources:
      - permission_assignee_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_assignee_or:
    sources:
      - permission_assignee_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_assignee_and:
    sources:
      - permission_assignee_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_assignee_andSequence:
    sources:
      - permission_assignee_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_assignee_refinement:
    sources:
      - permission_assignee_refinement
    s: this:policies/$(policy_id)/permissions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_target:
    sources:
      - permission_target
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "target" has no refinement
      - [odrl:source, $(source)~iri] # In case "target" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: permission_target_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission's target
                  - [str2, $(target_id)] # From permission target's refinement

  permission_target_xone_parent:
    sources:
      - permission_target
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's target
        - [grel:valueParameter2, "xone"] # From permission's target
    po:
      - p: odrl:xone
        o:
          - mapping: permission_target_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's target
                - [str2, $(id)] # From permission's target xone

  permission_target_or_parent:
    sources:
      - permission_target
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's target
        - [grel:valueParameter2, "or"] # From permission's target
    po:
      - p: odrl:or
        o:
          - mapping: permission_target_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's target
                - [str2, $(id)] # From permission's target or

  permission_target_and_parent:
    sources:
      - permission_target
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's target
        - [grel:valueParameter2, "and"] # From permission's target
    po:
      - p: odrl:and
        o:
          - mapping: permission_target_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's target
                - [str2, $(id)] # From permission's target and

  permission_target_andSequence_parent:
    sources:
      - permission_target
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's target
        - [grel:valueParameter2, "andSequence"] # From permission's target
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_target_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's target
                - [str2, $(id)] # From permission's target andSequence

  permission_target_xone:
    sources:
      - permission_target_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_target_or:
    sources:
      - permission_target_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_target_and:
    sources:
      - permission_target_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_target_andSequence:
    sources:
      - permission_target_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_target_refinement:
    sources:
      - permission_target_refinement
    s: this:policies/$(policy_id)/permissions/$(rule_id)/targets/$(target_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_action:
    sources:
      - permission_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: permission_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission's action
                  - [str2, $(action_id)] # From permission action's refinement

  permission_action_xone_parent:
    sources:
      - permission_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's action
        - [grel:valueParameter2, "xone"] # From permission's action
    po:
      - p: odrl:xone
        o:
          - mapping: permission_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's action
                - [str2, $(id)] # From permission's action xone

  permission_action_or_parent:
    sources:
      - permission_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's action
        - [grel:valueParameter2, "or"] # From permission's action
    po:
      - p: odrl:or
        o:
          - mapping: permission_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's action
                - [str2, $(id)] # From permission's action or

  permission_action_and_parent:
    sources:
      - permission_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's action
        - [grel:valueParameter2, "and"] # From permission's action
    po:
      - p: odrl:and
        o:
          - mapping: permission_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's action
                - [str2, $(id)] # From permission's action and

  permission_action_andSequence_parent:
    sources:
      - permission_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's action
        - [grel:valueParameter2, "andSequence"] # From permission's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's action
                - [str2, $(id)] # From permission's action andSequence

  permission_action_xone:
    sources:
      - permission_action_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_action_or:
    sources:
      - permission_action_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_action_and:
    sources:
      - permission_action_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_action_andSequence:
    sources:
      - permission_action_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_action_refinement:
    sources:
      - permission_action_refinement
    s: this:policies/$(policy_id)/permissions/$(rule_id)/actions/$(action_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_duty:
    sources:
      - permission_duty
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)
    po:
      - [odrl:target, $(target)~iri]
      - [odrl:assigner, $(assigner)~iri]
      - [odrl:attributedParty, $(attributed_party)~iri]
      - [odrl:attributingParty, $(attributing_party)~iri]
      - [odrl:compensatedParty, $(compensated_party)~iri]
      - [odrl:compensatingParty, $(compensating_party)~iri]
      - [odrl:consentedParty, $(consented_party)~iri]
      - [odrl:consentingParty, $(consenting_party)~iri]
      - [odrl:contractedParty, $(contracted_party)~iri]
      - [odrl:contractingParty, $(contracting_party)~iri]
      - [odrl:informedParty, $(informed_party)~iri]
      - [odrl:informingParty, $(informing_party)~iri]
      - [odrl:trackedParty, $(tracked_party)~iri]
      - [odrl:trackingParty, $(tracking_party)~iri]
      - p: odrl:assignee
        o:
          - mapping: permission_duty_assignee
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission's duty
                - [str2, $(duty_id)] # From permission duty's assignee
      - p: odrl:action
        o:
          - mapping: permission_duty_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission's duty
                - [str2, $(duty_id)] # From permission duty's action
      - p: odrl:constraint
        o:
          - mapping: permission_duty_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission's duty
                  - [str2, $(duty_id)] # From permission duty's constraint
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's duty
                - [grel:valueParameter2, "xone"] # From permission duty's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's duty
                - [grel:valueParameter2, "and"] # From permission duty's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's duty
                - [grel:valueParameter2, "or"] # From permission duty's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission's duty
                - [grel:valueParameter2, "andSequence"] # From permission duty's
      - p: odrl:consequence
        o:
          - mapping: permission_duty_consequence
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission's duty
                - [str2, $(duty_id)] # From permission duty's consequence

  permission_duty_xone_parent:
    sources:
      - permission_duty
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's duty
        - [grel:valueParameter2, "xone"] # From permission's duty
    po:
      - p: odrl:xone
        o:
          - mapping: permission_duty_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's duty
                - [str2, $(id)] # From permission duty's xone

  permission_duty_or_parent:
    sources:
      - permission_duty
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's duty
        - [grel:valueParameter2, "or"] # From permission's duty
    po:
      - p: odrl:or
        o:
          - mapping: permission_duty_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's duty
                - [str2, $(id)] # From permission duty's or

  permission_duty_and_parent:
    sources:
      - permission_duty
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's duty
        - [grel:valueParameter2, "and"] # From permission's duty
    po:
      - p: odrl:and
        o:
          - mapping: permission_duty_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's duty
                - [str2, $(id)] # From permission duty's and

  permission_duty_andSequence_parent:
    sources:
      - permission_duty
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's duty
        - [grel:valueParameter2, "andSequence"] # From permission's duty
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_duty_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's duty
                - [str2, $(id)] # From permission duty's andSequence

  permission_duty_action:
    sources:
      - permission_duty_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: permission_duty_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission duty's action
                  - [str2, $(action_id)] # From permission duty action's refinement
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission duty's action
                - [grel:valueParameter2, "xone"] # From permission duty's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission duty's action
                - [grel:valueParameter2, "and"] # From permission duty's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission duty's action
                - [grel:valueParameter2, "or"] # From permission duty's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From permission duty's action
                - [grel:valueParameter2, "andSequence"] # From permission duty's action

  permission_duty_action_xone_parent:
    sources:
      - permission_duty_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty's action
        - [grel:valueParameter2, "xone"] # From permission duty's action
    po:
      - p: odrl:xone
        o:
          - mapping: permission_duty_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty's action
                - [str2, $(id)] # From permission duty's xone
  permission_duty_action_or_parent:
    sources:
      - permission_duty_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty's action
        - [grel:valueParameter2, "or"] # From permission duty's action
    po:
      - p: odrl:or
        o:
          - mapping: permission_duty_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty's action
                - [str2, $(id)] # From permission duty's action or

  permission_duty_action_and_parent:
    sources:
      - permission_duty_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty's action
        - [grel:valueParameter2, "and"] # From permission duty's action
    po:
      - p: odrl:and
        o:
          - mapping: permission_duty_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty's action
                - [str2, $(id)] # From permission duty's action and

  permission_duty_action_andSequence_parent:
    sources:
      - permission_duty_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty's action
        - [grel:valueParameter2, "andSequence"] # From permission duty's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_duty_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty's action
                - [str2, $(id)] # From permission duty's action andSequence

  permission_duty_action_xone:
    sources:
      - permission_duty_action_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_action_or:
    sources:
      - permission_duty_action_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_action_and:
    sources:
      - permission_duty_action_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_action_andSequence:
    sources:
      - permission_duty_action_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_action_refinement:
    sources:
      - permission_duty_action_refinement
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/actions/$(action_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_duty_assignee:
    sources:
      - permission_duty_assignee
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/assignees/$(id)
    po:
      - [a, $(type)]
      - [rdf:value, $(value)~iri]
      - [rdf:uid, $(uid)~iri]
      - [rdf:source, $(source)~iri]

  permission_duty_constraint:
    sources:
      - permission_duty_constraint
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_duty_xone:
    sources:
      - permission_duty_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_or:
    sources:
      - permission_duty_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_and:
    sources:
      - permission_duty_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_andSequence:
    sources:
      - permission_duty_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_consequence:
    sources:
      - permission_duty_consequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(id)/consequences/$(id)
    po:
      - [odrl:target, $(target)~iri]
      - [odrl:assigner, $(assigner)~iri]
      - [odrl:assignee, $(assignee)~iri]
      - [odrl:attributedParty, $(attributed_party)~iri]
      - [odrl:attributingParty, $(attributing_party)~iri]
      - [odrl:compensatedParty, $(compensated_party)~iri]
      - [odrl:compensatingParty, $(compensating_party)~iri]
      - [odrl:consentedParty, $(consented_party)~iri]
      - [odrl:consentingParty, $(consenting_party)~iri]
      - [odrl:contractedParty, $(contracted_party)~iri]
      - [odrl:contractingParty, $(contracting_party)~iri]
      - [odrl:informedParty, $(informed_party)~iri]
      - [odrl:informingParty, $(informing_party)~iri]
      - [odrl:trackedParty, $(tracked_party)~iri]
      - [odrl:trackingParty, $(tracking_party)~iri]
      - p: odrl:action
        o:
          - mapping: permission_duty_consequence_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From permission duty consequence
                - [str2, $(consequence_id)] # From permission duty consequence's action

  permission_duty_consequence_action:
    sources:
      - permission_duty_consequence_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: permission_duty_consequence_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From permission duty consequence's action
                  - [str2, $(action_id)] # From permission duty consequence action's refinement

  permission_duty_consequence_action_xone_parent:
    sources:
      - permission_duty_consequence_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty consequence's action
        - [grel:valueParameter2, "xone"] # From permission duty consequence's action
    po:
      - p: odrl:xone
        o:
          - mapping: permission_duty_consequence_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty consequence's action
                - [str2, $(id)] # From permission duty consequence's action xone

  permission_duty_consequence_action_or_parent:
    sources:
      - permission_duty_consequence_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty consequence's action
        - [grel:valueParameter2, "or"] # From permission duty consequence's action
    po:
      - p: odrl:or
        o:
          - mapping: permission_duty_consequence_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty consequence's action
                - [str2, $(id)] # From permission duty consequence's action or

  permission_duty_consequence_action_and_parent:
    sources:
      - permission_duty_consequence_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty consequence's action
        - [grel:valueParameter2, "and"] # From permission duty consequence's action
    po:
      - p: odrl:and
        o:
          - mapping: permission_duty_consequence_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty consequence's action
                - [str2, $(id)] # From permission duty consequence's action and

  permission_duty_consequence_action_xone:
    sources:
      - permission_duty_consequence_action_xone
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_consequence_action_or:
    sources:
      - permission_duty_consequence_action_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_consequence_action_and:
    sources:
      - permission_duty_consequence_action_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_consequence_action_andSequence:
    sources:
      - permission_duty_consequence_action_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(action_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_duty_consequence_action_andSequence_parent:
    sources:
      - permission_duty_consequence_action
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(consequence_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission duty consequence's action
        - [grel:valueParameter2, "andSequence"] # From permission duty consequence's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_duty_consequence_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission duty consequence's action
                - [str2, $(id)] # From permission duty consequence's action andSequence

  permission_duty_consequence_action_refinement:
    sources:
      - permission_duty_consequence_action_refinement
    s: this:policies/$(policy_id)/permissions/$(rule_id)/duties/$(duty_id)/consequences/$(id)/actions/$(id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_constraint:
    sources:
      - permission_constraint
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  permission_constraint_xone_parent:
    sources:
      - permission
    s: this:policies/$(policy_id)/permissions/$(id)/constraints/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's constraint
        - [grel:valueParameter2, "xone"] # From permission's constraint
    po:
      - p: odrl:xone
        o:
          - mapping: permission_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's constraint
                - [str2, $(id)] # From permission's constraint xone

  permission_constraint_or_parent:
    sources:
      - permission_constraint
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's constraint
        - [grel:valueParameter2, "or"] # From permission's constraint
    po:
      - p: odrl:or
        o:
          - mapping: permission_constraint_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's constraint
                - [str2, $(id)] # From permission's constraint or

  permission_constraint_and_parent:
    sources:
      - permission_constraint
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's constraint
        - [grel:valueParameter2, "and"] # From permission's constraint
    po:
      - p: odrl:and
        o:
          - mapping: permission_constraint_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's constraint
                - [str2, $(id)] # From permission's constraint and

  permission_constraint_andSequence_parent:
    sources:
      - permission_constraint
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From permission's constraint
        - [grel:valueParameter2, "andSequence"] # From permission's constraint
    po:
      - p: odrl:andSequence
        o:
          - mapping: permission_constraint_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From permission's constraint
                - [str2, $(id)] # From permission's constraint andSequence

  permission_constraints_xone:
    sources:
      - permission_constraint_xone
    s: null
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/logical_constraints/xone/$(id)~iri]
      - p: rdf:rest
        o:
          - mapping: permission_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, $(id)]

          - value: rdf:nil
            type: iri
            condition:
              function: idlab-fn:isNull
              parameters:
                - [idlab-fn:str, $(next)]

          # value: $(rule_id)_xone_$(next)
          # type: blank
          # condition:
          #   function: idlab-fn:notEqual
          #   parameters:
          #     - [grel:valueParameter, $(next)]
          #     - [grel:valueParameter2, "null"]

  permission_constraint_or:
    sources:
      - permission_constraint_or
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_constraint_and:
    sources:
      - permission_constraint_and
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  permission_constraint_andSequence:
    sources:
      - permission_constraint_andSequence
    s: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/permissions/$(rule_id)/constraints/$(constraint_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]
  
  prohibition:
    sources:
      - prohibition
    s: this:policies/$(policy_id)/prohibitions/$(id)
    po:
      - [dc-terms:subject, $(cce), xsd:string]
      - p: odrl:assignee
        o:
          - mapping: prohibition_assignee
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From prohibition
                - [str2, $(rule_id)] # From assignee
      - p: odrl:target
        o:
          - mapping: prohibition_target
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From prohibition
                - [str2, $(rule_id)] # From target
      - p: odrl:action
        o:
          - mapping: prohibition_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From prohibition
                - [str2, $(rule_id)] # From action
      - [odrl:assigner, $(assigner)~iri]
      - p: odrl:remedy
        o:
          - mapping: prohibition_remedy
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From prohibition
                - [str2, $(rule_id)] # From action
      - p: odrl:constraint
        o:
          - mapping: prohibition_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From prohibition
                  - [str2, $(rule_id)] # From prohibition's constraint
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/prohibitions/$(id)/constraints/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From prohibition's constraint
                - [grel:valueParameter2, "xone"] # From prohibition's constraint
          - value: this:policies/$(policy_id)/prohibitions/$(id)/constraints/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From prohibition's constraint
                - [grel:valueParameter2, "and"] # From prohibition's constraint
          - value: this:policies/$(policy_id)/prohibitions/$(id)/constraints/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From prohibition's constraint
                - [grel:valueParameter2, "or"] # From prohibition's constraint
          - value: this:policies/$(policy_id)/prohibitions/$(id)/constraints/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From prohibition's constraint
                - [grel:valueParameter2, "andSequence"] # From prohibition's constraint

  prohibition_assignee:
    sources:
      - prohibition_assignee
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "assignee" has no refinement
      - [odrl:source, $(source)~iri] # In case "assignee" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: prohibition_assignee_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From prohibition's assignee
                  - [str2, $(assignee_id)] # From prohibition assignee's refinement

  prohibition_assignee_xone_parent:
    sources:
      - prohibition_assignee
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's assignee
        - [grel:valueParameter2, "xone"] # From prohibition's assignee
    po:
      - p: odrl:xone
        o:
          - mapping: prohibition_assignee_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's assignee
                - [str2, $(id)] # From prohibition's assignee xone

  prohibition_assignee_or_parent:
    sources:
      - prohibition_assignee
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's assignee
        - [grel:valueParameter2, "or"] # From prohibition's assignee
    po:
      - p: odrl:or
        o:
          - mapping: prohibition_assignee_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's assignee
                - [str2, $(id)] # From prohibition's assignee or

  prohibition_assignee_and_parent:
    sources:
      - prohibition_assignee
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's assignee
        - [grel:valueParameter2, "and"] # From prohibition's assignee
    po:
      - p: odrl:and
        o:
          - mapping: prohibition_assignee_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's assignee
                - [str2, $(id)] # From prohibition's assignee and

  prohibition_assignee_andSequence_parent:
    sources:
      - prohibition_assignee
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's assignee
        - [grel:valueParameter2, "andSequence"] # From prohibition's assignee
    po:
      - p: odrl:andSequence
        o:
          - mapping: prohibition_assignee_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's assignee
                - [str2, $(id)] # From prohibition's assignee andSequence

  prohibition_assignee_xone:
    sources:
      - prohibition_assignee_xone
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_assignee_or:
    sources:
      - prohibition_assignee_or
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_assignee_and:
    sources:
      - prohibition_assignee_and
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_assignee_andSequence:
    sources:
      - prohibition_assignee_andSequence
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_assignee_refinement:
    sources:
      - prohibition_assignee_refinement
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  prohibition_target:
    sources:
      - prohibition_target
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "target" has no refinement
      - [odrl:source, $(source)~iri] # In case "target" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: prohibition_target_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From prohibition's target
                  - [str2, $(target_id)] # From prohibition target's refinement

  prohibition_target_xone_parent:
    sources:
      - prohibition_target
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's target
        - [grel:valueParameter2, "xone"] # From prohibition's target
    po:
      - p: odrl:xone
        o:
          - mapping: prohibition_target_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's target
                - [str2, $(id)] # From prohibition's target xone

  prohibition_target_or_parent:
    sources:
      - prohibition_target
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's target
        - [grel:valueParameter2, "or"] # From prohibition's target
    po:
      - p: odrl:or
        o:
          - mapping: prohibition_target_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's target
                - [str2, $(id)] # From prohibition's target or

  prohibition_target_and_parent:
    sources:
      - prohibition_target
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's target
        - [grel:valueParameter2, "and"] # From prohibition's target
    po:
      - p: odrl:and
        o:
          - mapping: prohibition_target_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's target
                - [str2, $(id)] # From prohibition's target and

  prohibition_target_andSequence_parent:
    sources:
      - prohibition_target
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's target
        - [grel:valueParameter2, "andSequence"] # From prohibition's target
    po:
      - p: odrl:andSequence
        o:
          - mapping: prohibition_target_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's target
                - [str2, $(id)] # From prohibition's target andSequence

  prohibition_target_xone:
    sources:
      - prohibition_target_xone
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_target_or:
    sources:
      - prohibition_target_or
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_target_and:
    sources:
      - prohibition_target_and
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_target_andSequence:
    sources:
      - prohibition_target_andSequence
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_target_refinement:
    sources:
      - prohibition_target_refinement
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/targets/$(target_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  prohibition_action:
    sources:
      - prohibition_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: prohibition_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From prohibition's action
                  - [str2, $(action_id)] # From prohibition action's refinement

  prohibition_action_xone_parent:
    sources:
      - prohibition_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's action
        - [grel:valueParameter2, "xone"] # From prohibition's action
    po:
      - p: odrl:xone
        o:
          - mapping: prohibition_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's action
                - [str2, $(id)] # From prohibition's action xone

  prohibition_action_or_parent:
    sources:
      - prohibition_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's action
        - [grel:valueParameter2, "or"] # From prohibition's action
    po:
      - p: odrl:or
        o:
          - mapping: prohibition_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's action
                - [str2, $(id)] # From prohibition's action or

  prohibition_action_and_parent:
    sources:
      - prohibition_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's action
        - [grel:valueParameter2, "and"] # From prohibition's action
    po:
      - p: odrl:and
        o:
          - mapping: prohibition_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's action
                - [str2, $(id)] # From prohibition's action and

  prohibition_action_andSequence_parent:
    sources:
      - prohibition_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's action
        - [grel:valueParameter2, "andSequence"] # From prohibition's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: prohibition_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's action
                - [str2, $(id)] # From prohibition's action andSequence

  prohibition_action_xone:
    sources:
      - prohibition_action_xone
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
         - value: rdf:nil
           type: iri
           condition:
             function: equal
             parameters:
               - [str1, $(next)]
               - [str2, "null"]
         - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/xone/$(next)
           type: iri
           condition:
             function: idlab-fn:notEqual
             parameters:
               - [grel:valueParameter, $(next)]
               - [grel:valueParameter2, "null"]

  prohibition_action_or:
    sources:
      - prohibition_action_or
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
         - value: rdf:nil
           type: iri
           condition:
             function: equal
             parameters:
               - [str1, $(next)]
               - [str2, "null"]
         - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/or/$(next)
           type: iri
           condition:
             function: idlab-fn:notEqual
             parameters:
               - [grel:valueParameter, $(next)]
               - [grel:valueParameter2, "null"]

  prohibition_action_and:
    sources:
      - prohibition_action_and
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
         - value: rdf:nil
           type: iri
           condition:
             function: equal
             parameters:
               - [str1, $(next)]
               - [str2, "null"]
         - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/and/$(next)
           type: iri
           condition:
             function: idlab-fn:notEqual
             parameters:
               - [grel:valueParameter, $(next)]
               - [grel:valueParameter2, "null"]

  prohibition_action_andSequence:
    sources:
      - prohibition_action_andSequence
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
         - value: rdf:nil
           type: iri
           condition:
             function: equal
             parameters:
               - [str1, $(next)]
               - [str2, "null"]
         - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/andSequence/$(next)
           type: iri
           condition:
             function: idlab-fn:notEqual
             parameters:
               - [grel:valueParameter, $(next)]
               - [grel:valueParameter2, "null"]

  prohibition_action_refinement:
    sources:
      - prohibition_action_refinement
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/actions/$(action_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  prohibition_constraint:
    sources:
      - prohibition_constraint
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  prohibition_constraint_xone_parent:
    sources:
      - prohibition
    s: this:policies/$(policy_id)/prohibitions/$(id)/constraints/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's constraint
        - [grel:valueParameter2, "xone"] # From prohibition's constraint
    po:
      - p: odrl:xone
        o:
          - mapping: prohibition_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's constraint
                - [str2, $(id)] # From prohibition's constraint xone

  prohibition_constraint_or_parent:
    sources:
      - prohibition_constraint
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's constraint
        - [grel:valueParameter2, "or"] # From prohibition's constraint
    po:
      - p: odrl:or
        o:
          - mapping: prohibition_constraint_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's constraint
                - [str2, $(id)] # From prohibition's constraint or

  prohibition_constraint_and_parent:
    sources:
      - prohibition_constraint
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's constraint
        - [grel:valueParameter2, "and"] # From prohibition's constraint
    po:
      - p: odrl:and
        o:
          - mapping: prohibition_constraint_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's constraint
                - [str2, $(id)] # From prohibition's constraint and

  prohibition_constraint_andSequence_parent:
    sources:
      - prohibition_constraint
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From prohibition's constraint
        - [grel:valueParameter2, "andSequence"] # From prohibition's constraint
    po:
      - p: odrl:andSequence
        o:
          - mapping: prohibition_constraint_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From prohibition's constraint
                - [str2, $(id)] # From prohibition's constraint andSequence

  prohibition_constraints_xone:
    sources:
      - prohibition_constraint_xone
    s: null
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/logical_constraints/xone/$(id)~iri]
      - p: rdf:rest
        o:
          - mapping: prohibition_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, $(id)]

          - value: rdf:nil
            type: iri
            condition:
              function: idlab-fn:isNull
              parameters:
                - [idlab-fn:str, $(next)]

  prohibition_constraint_or:
    sources:
      - prohibition_constraint_or
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_constraint_and:
    sources:
      - prohibition_constraint_and
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_constraint_andSequence:
    sources:
      - prohibition_constraint_andSequence
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/prohibitions/$(rule_id)/constraints/$(constraint_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  prohibition_remedy:
    sources:
      - prohibition_remedy
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/remedies/$(id)
    po:
      - [odrl:target, $(target)~iri]
      - [odrl:assigner, $(assigner)~iri]
      - [odrl:assignee, $(assignee)~iri]
      - [odrl:attributedParty, $(attributed_party)~iri]
      - [odrl:attributingParty, $(attributing_party)~iri]
      - [odrl:compensatedParty, $(compensated_party)~iri]
      - [odrl:compensatingParty, $(compensating_party)~iri]
      - [odrl:consentedParty, $(consented_party)~iri]
      - [odrl:consentingParty, $(consenting_party)~iri]
      - [odrl:contractedParty, $(contracted_party)~iri]
      - [odrl:contractingParty, $(contracting_party)~iri]
      - [odrl:informedParty, $(informed_party)~iri]
      - [odrl:informingParty, $(informing_party)~iri]
      - [odrl:trackedParty, $(tracked_party)~iri]
      - [odrl:trackingParty, $(tracking_party)~iri]
      - p: odrl:action
        o:
          - mapping: prohibition_remedy_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From prohibition's remedy
                - [str2, $(remedy_id)] # From prohibition remedy's action
      - p: odrl:constraint
        o:
          - mapping: prohibition_remedy_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From prohibition's remedy
                  - [str2, $(remedy_id)] # From prohibition remedy's constraint

  prohibition_remedy_action:
    sources:
      - prohibition_remedy_action
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/remedies/$(remedy_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]

  prohibition_remedy_constraint:
    sources:
      - prohibition_remedy_constraint
    s: this:policies/$(policy_id)/prohibitions/$(rule_id)/remedies/$(remedy_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]
  
  obligation:
    sources:
      - obligation
    s: this:policies/$(policy_id)/obligations/$(id)
    po:
      - [dc-terms:subject, $(cce), xsd:string]
      - [odrl:assigner, $(assigner)~iri]
      - p: odrl:assignee
        o:
          - mapping: obligation_assignee
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation
                - [str2, $(rule_id)] # From assignee
      - p: odrl:target # In case "target" is an object
        o:
          - mapping: obligation_target
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation
                - [str2, $(rule_id)] # From target
      - p: odrl:action
        o:
          - mapping: obligation_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation
                - [str2, $(rule_id)] # From action
      - p: odrl:consequence
        o:
          - mapping: obligation_consequence
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation
                - [str2, $(rule_id)] # From consequence
      - p: odrl:constraint
        o:
          - mapping: obligation_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation
                  - [str2, $(rule_id)] # From obligation's constraint
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/obligations/$(id)/constraints/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's constraint
                - [grel:valueParameter2, "xone"] # From obligation's constraint
          - value: this:policies/$(policy_id)/obligations/$(id)/constraints/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's constraint
                - [grel:valueParameter2, "and"] # From obligation's constraint
          - value: this:policies/$(policy_id)/obligations/$(id)/constraints/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's constraint
                - [grel:valueParameter2, "or"] # From obligation's constraint
          - value: this:policies/$(policy_id)/obligations/$(id)/constraints/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's constraint
                - [grel:valueParameter2, "andSequence"] # From obligation's constraint

  obligation_assignee:
    sources:
      - obligation_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "assignee" has no refinement
      - [odrl:source, $(source)~iri] # In case "assignee" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: obligation_assignee_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation's assignee
                  - [str2, $(assignee_id)] # From obligation assignee's refinement

  obligation_assignee_xone_parent:
    sources:
      - obligation_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's assignee
        - [grel:valueParameter2, "xone"] # From obligation's assignee
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_assignee_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's assignee
                - [str2, $(id)] # From obligation's assignee xone

  obligation_assignee_or_parent:
    sources:
      - obligation_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's assignee
        - [grel:valueParameter2, "or"] # From obligation's assignee
    po:
      - p: odrl:or
        o:
          - mapping: obligation_assignee_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's assignee
                - [str2, $(id)] # From obligation's assignee or

  obligation_assignee_and_parent:
    sources:
      - obligation_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's assignee
        - [grel:valueParameter2, "and"] # From obligation's assignee
    po:
      - p: odrl:and
        o:
          - mapping: obligation_assignee_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's assignee
                - [str2, $(id)] # From obligation's assignee and

  obligation_assignee_andSequence_parent:
    sources:
      - obligation_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's assignee
        - [grel:valueParameter2, "andSequence"] # From obligation's assignee
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_assignee_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's assignee
                - [str2, $(id)] # From obligation's assignee andSequence

  obligation_assignee_xone:
    sources:
      - obligation_assignee_xone
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_assignee_or:
    sources:
      - obligation_assignee_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_assignee_and:
    sources:
      - obligation_assignee_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_assignee_andSequence:
    sources:
      - obligation_assignee_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_assignee_refinement:
    sources:
      - obligation_assignee_refinement
    s: this:policies/$(policy_id)/obligations/$(rule_id)/assignees/$(assignee_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_target:
    sources:
      - obligation_target
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(id)
    po:
      - [a, $(type)~iri]
      - [odrl:uid, $(uid)~iri] # In case "target" has no refinement
      - [odrl:source, $(source)~iri] # In case "target" has one or more refinement(s)
      - p: odrl:refinement
        o:
          - mapping: obligation_target_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation's target
                  - [str2, $(target_id)] # From obligation target's refinement

  obligation_target_xone_parent:
    sources:
      - obligation_target
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's target
        - [grel:valueParameter2, "xone"] # From obligation's target
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_target_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's target
                - [str2, $(id)] # From obligation's target xone

  obligation_target_or_parent:
    sources:
      - obligation_target
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's target
        - [grel:valueParameter2, "or"] # From obligation's target
    po:
      - p: odrl:or
        o:
          - mapping: obligation_target_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's target
                - [str2, $(id)] # From obligation's target or

  obligation_target_and_parent:
    sources:
      - obligation_target
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's target
        - [grel:valueParameter2, "and"] # From obligation's target
    po:
      - p: odrl:and
        o:
          - mapping: obligation_target_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's target
                - [str2, $(id)] # From obligation's target and

  obligation_target_andSequence_parent:
    sources:
      - obligation_target
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's target
        - [grel:valueParameter2, "andSequence"] # From obligation's target
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_target_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's target
                - [str2, $(id)] # From obligation's target andSequence

  obligation_target_xone:
    sources:
      - obligation_target_xone
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_target_or:
    sources:
      - obligation_target_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_target_and:
    sources:
      - obligation_target_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_target_andSequence:
    sources:
      - obligation_target_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_target_refinement:
    sources:
      - obligation_target_refinement
    s: this:policies/$(policy_id)/obligations/$(rule_id)/targets/$(target_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_action:
    sources:
      - obligation_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: obligation_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation's action
                  - [str2, $(action_id)] # From obligation action's refinement

  obligation_action_xone_parent:
    sources:
      - obligation_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's action
        - [grel:valueParameter2, "xone"] # From obligation's action
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's action
                - [str2, $(id)] # From obligation's action xone

  obligation_action_or_parent:
    sources:
      - obligation_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's action
        - [grel:valueParameter2, "or"] # From obligation's action
    po:
      - p: odrl:or
        o:
          - mapping: obligation_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's action
                - [str2, $(id)] # From obligation's action or

  obligation_action_and_parent:
    sources:
      - obligation_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's action
        - [grel:valueParameter2, "and"] # From obligation's action
    po:
      - p: odrl:and
        o:
          - mapping: obligation_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's action
                - [str2, $(id)] # From obligation's action and

  obligation_action_andSequence_parent:
    sources:
      - obligation_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's action
        - [grel:valueParameter2, "andSequence"] # From obligation's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's action
                - [str2, $(id)] # From obligation's action andSequence

  obligation_action_xone:
    sources:
      - obligation_action_xone
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_action_or:
    sources:
      - obligation_action_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_action_and:
    sources:
      - obligation_action_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_action_andSequence:
    sources:
      - obligation_action_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_action_refinement:
    sources:
      - obligation_action_refinement
    s: this:policies/$(policy_id)/obligations/$(rule_id)/actions/$(action_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_consequence:
    sources:
      - obligation_consequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)
    po:
      - [odrl:target, $(target)~iri]
      - [odrl:assigner, $(assigner)~iri]
      - [odrl:attributedParty, $(attributed_party)~iri]
      - [odrl:attributingParty, $(attributing_party)~iri]
      - [odrl:compensatedParty, $(compensated_party)~iri]
      - [odrl:compensatingParty, $(compensating_party)~iri]
      - [odrl:consentedParty, $(consented_party)~iri]
      - [odrl:consentingParty, $(consenting_party)~iri]
      - [odrl:contractedParty, $(contracted_party)~iri]
      - [odrl:contractingParty, $(contracting_party)~iri]
      - [odrl:informedParty, $(informed_party)~iri]
      - [odrl:informingParty, $(informing_party)~iri]
      - [odrl:trackedParty, $(tracked_party)~iri]
      - [odrl:trackingParty, $(tracking_party)~iri]
      - p: odrl:assignee
        o:
          - mapping: obligation_consequence_assignee
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation's consequence
                - [str2, $(consequence_id)] # From obligation consequence's assignee
      - p: odrl:action
        o:
          - mapping: obligation_consequence_action
            condition:
              function: equal
              parameters:
                - [str1, $(id)] # From obligation's consequence
                - [str2, $(consequence_id)] # From obligation consequence's action
      - p: odrl:constraint
        o:
          - mapping: obligation_consequence_constraint
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation's consequence
                  - [str2, $(consequence_id)] # From obligation consequence's constraint
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's consequence
                - [grel:valueParameter2, "xone"] # From obligation consequence's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's consequence
                - [grel:valueParameter2, "and"] # From obligation consequence's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's consequence
                - [grel:valueParameter2, "or"] # From obligation consequence's
      - p: odrl:constraint
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation's consequence
                - [grel:valueParameter2, "andSequence"] # From obligation consequence's

  obligation_consequence_xone_parent:
    sources:
      - obligation_consequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's consequence
        - [grel:valueParameter2, "xone"] # From obligation's consequence
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_consequence_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's consequence
                - [str2, $(id)] # From obligation consequence's xone

  obligation_consequence_or_parent:
    sources:
      - obligation_consequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's consequence
        - [grel:valueParameter2, "or"] # From obligation's consequence
    po:
      - p: odrl:or
        o:
          - mapping: obligation_consequence_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's consequence
                - [str2, $(id)] # From obligation consequence's or

  obligation_consequence_and_parent:
    sources:
      - obligation_consequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's consequence
        - [grel:valueParameter2, "and"] # From obligation's consequence
    po:
      - p: odrl:and
        o:
          - mapping: obligation_consequence_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's consequence
                - [str2, $(id)] # From obligation consequence's and

  obligation_consequence_andSequence_parent:
    sources:
      - obligation_consequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's consequence
        - [grel:valueParameter2, "andSequence"] # From obligation's consequence
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_consequence_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's consequence
                - [str2, $(id)] # From obligation consequence's andSequence

  obligation_consequence_action:
    sources:
      - obligation_consequence_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)
    po:
      - [rdf:value, $(value)~iri]
      - p: odrl:refinement
        o:
          - mapping: obligation_consequence_action_refinement
            condition:
              - function: idlab-fn:isNull
                parameters:
                  - [idlab-fn:str, $(operand)]
              - function: equal
                parameters:
                  - [str1, $(id)] # From obligation consequence's action
                  - [str2, $(action_id)] # From obligation consequence action's refinement
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/xone
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation consequence's action
                - [grel:valueParameter2, "xone"] # From obligation consequence's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/and
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation consequence's action
                - [grel:valueParameter2, "and"] # From obligation consequence's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/or
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation consequence's action
                - [grel:valueParameter2, "or"] # From obligation consequence's action
      - p: odrl:refinement
        o:
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/andSequence
            type: iri
            condition:
              function: equal
              parameters:
                - [grel:valueParameter, $(operand)] # From obligation consequence's action
                - [grel:valueParameter2, "andSequence"] # From obligation consequence's action

  obligation_consequence_action_xone_parent:
    sources:
      - obligation_consequence_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation consequence's action
        - [grel:valueParameter2, "xone"] # From obligation consequence's action
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_consequence_action_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation consequence's action
                - [str2, $(id)] # From obligation consequence's xone
  obligation_consequence_action_or_parent:
    sources:
      - obligation_consequence_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation consequence's action
        - [grel:valueParameter2, "or"] # From obligation consequence's action
    po:
      - p: odrl:or
        o:
          - mapping: obligation_consequence_action_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation consequence's action
                - [str2, $(id)] # From obligation consequence's action or

  obligation_consequence_action_and_parent:
    sources:
      - obligation_consequence_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation consequence's action
        - [grel:valueParameter2, "and"] # From obligation consequence's action
    po:
      - p: odrl:and
        o:
          - mapping: obligation_consequence_action_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation consequence's action
                - [str2, $(id)] # From obligation consequence's action and

  obligation_consequence_action_andSequence_parent:
    sources:
      - obligation_consequence_action
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation consequence's action
        - [grel:valueParameter2, "andSequence"] # From obligation consequence's action
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_consequence_action_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation consequence's action
                - [str2, $(id)] # From obligation consequence's action andSequence

  obligation_consequence_action_xone:
    sources:
      - obligation_consequence_action_xone
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_action_or:
    sources:
      - obligation_consequence_action_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_action_and:
    sources:
      - obligation_consequence_action_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_action_andSequence:
    sources:
      - obligation_consequence_action_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_action_refinement:
    sources:
      - obligation_consequence_action_refinement
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/actions/$(action_id)/refinements/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_consequence_assignee:
    sources:
      - obligation_consequence_assignee
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/assignees/$(id)
    po:
      - [a, $(type)]
      - [rdf:value, $(value)~iri]
      - [rdf:uid, $(uid)~iri]
      - [rdf:source, $(source)~iri]

  obligation_consequence_constraint:
    sources:
      - obligation_consequence_constraint
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_consequence_xone:
    sources:
      - obligation_consequence_xone
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/xone/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/xone/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_or:
    sources:
      - obligation_consequence_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_and:
    sources:
      - obligation_consequence_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_consequence_andSequence:
    sources:
      - obligation_consequence_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/consequences/$(consequence_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_constraint:
    sources:
      - obligation_constraint
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(id)
    po:
      - [odrl:leftOperand, $(left_operand)~iri]
      - [odrl:operator, $(operator)~iri]
      - [odrl:rightOperand, $(right_operand_value_iri)~iri]
      - [odrl:rightOperand, $(right_operand_value_date), xsd:date]
      - [odrl:rightOperand, $(right_operand_value_dateTime), xsd:dateTime]
      - [odrl:rightOperand, $(right_operand_value_string), xsd:string]
      - [odrl:rightOperand, $(right_operand_value_float), xsd:float]
      - [odrl:rightOperand, $(right_operand_value_duration), xsd:duration]
      - [odrl:unit, $(unit)~iri]

  obligation_constraint_xone_parent:
    sources:
      - obligation
    s: this:policies/$(policy_id)/obligations/$(id)/constraints/xone
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's constraint
        - [grel:valueParameter2, "xone"] # From obligation's constraint
    po:
      - p: odrl:xone
        o:
          - mapping: obligation_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's constraint
                - [str2, $(id)] # From obligation's constraint xone

  obligation_constraint_or_parent:
    sources:
      - obligation_constraint
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(id)/or
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's constraint
        - [grel:valueParameter2, "or"] # From obligation's constraint
    po:
      - p: odrl:or
        o:
          - mapping: obligation_constraint_or
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's constraint
                - [str2, $(id)] # From obligation's constraint or

  obligation_constraint_and_parent:
    sources:
      - obligation_constraint
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(id)/and
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's constraint
        - [grel:valueParameter2, "and"] # From obligation's constraint
    po:
      - p: odrl:and
        o:
          - mapping: obligation_constraint_and
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's constraint
                - [str2, $(id)] # From obligation's constraint and

  obligation_constraint_andSequence_parent:
    sources:
      - obligation_constraint
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(id)/andSequence
    condition:
      function: equal
      parameters:
        - [grel:valueParameter, $(operand)] # From obligation's constraint
        - [grel:valueParameter2, "andSequence"] # From obligation's constraint
    po:
      - p: odrl:andSequence
        o:
          - mapping: obligation_constraint_andSequence
            condition:
              function: equal
              parameters:
                - [str1, $(first)] # From obligation's constraint
                - [str2, $(id)] # From obligation's constraint andSequence

  obligation_constraints_xone:
    sources:
      - obligation_constraint_xone
    s: null
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/logical_constraints/xone/$(id)~iri]
      - p: rdf:rest
        o:
          - mapping: obligation_constraints_xone
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, $(id)]

          - value: rdf:nil
            type: iri
            condition:
              function: idlab-fn:isNull
              parameters:
                - [idlab-fn:str, $(next)]

          # value: $(rule_id)_xone_$(next)
          # type: blank
          # condition:
          #   function: idlab-fn:notEqual
          #   parameters:
          #     - [grel:valueParameter, $(next)]
          #     - [grel:valueParameter2, "null"]

  obligation_constraint_or:
    sources:
      - obligation_constraint_or
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/or/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/or/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_constraint_and:
    sources:
      - obligation_constraint_and
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/and/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/and/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]

  obligation_constraint_andSequence:
    sources:
      - obligation_constraint_andSequence
    s: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/andSequence/$(id)
    po:
      - [rdf:first, this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/constraints/$(id)~iri]
      - p: rdf:rest
        o:
          - value: rdf:nil
            type: iri
            condition:
              function: equal
              parameters:
                - [str1, $(next)]
                - [str2, "null"]
          - value: this:policies/$(policy_id)/obligations/$(rule_id)/constraints/$(constraint_id)/andSequence/$(next)
            type: iri
            condition:
              function: idlab-fn:notEqual
              parameters:
                - [grel:valueParameter, $(next)]
                - [grel:valueParameter2, "null"]